{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"uLAEaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAgB9C,OACI,0BAAMC,SATW,SAACC,GAClBA,EAAEC,iBACGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAAAS,GAAU,OAAMP,GAAN,mBAAqBO,OAC7CN,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAQT,EACRU,SAjBc,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,Y,uBCLnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACJ,mCACTC,EAFa,iDAEoCC,UAAUH,GAF9C,6BACJ,oCADI,SAIAI,MAAMF,GAJN,cAIbG,EAJa,gBAKEA,EAAKC,OALP,uBAKZC,EALY,EAKZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACH,GAAMA,EAAIC,GACV,MAASD,EAAIE,MACb,cAAOF,EAAIG,cAAX,aAAO,EAAYC,iBAAiBZ,QAXzB,kBAeZM,GAfY,4CAAH,sDCAPO,EAAa,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEpC,OACI,yBAAKc,UAAU,QACX,4BAAKJ,GACL,yBAAKK,IAAKf,EAAKgB,IAAKN,MCHnBO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECCb,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAmBxC,OAXAC,qBAAW,WACPxB,EAASC,GACJwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,CAAEpB,IAEEqB,EDlB0BK,CAAc1B,GAAlCa,EAFwB,EAE7BN,KAAaa,EAFgB,EAEhBA,QAErB,OAEI,oCACI,gCAAOpB,EAAP,KAEEoB,GAAW,0CAEb,yBAAKJ,UAAU,+CAEPH,EAAOJ,KAAK,SAAAC,GAAG,OAAI,kBAAC,EAAD,eAAaiB,IAAKjB,EAAIC,IAAQD,OAFzD,OEcGkB,EAzBM,WAAO,IAAD,EAEa1C,mBAAS,CAAC,cAFvB,mBAEhBQ,EAFgB,KAEJT,EAFI,KAIvB,OACI,oCACI,oCAEA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAGA,4BAGQS,EAAWe,KAAK,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CAAS2B,IAAM3B,EAAWA,SAAWA,UCf7D6B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.1d5c4774.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nexport const AddCategory = ( {setCategories} ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue( e.target.value )\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if ( inputValue.trim().length > 2){\r\n            setCategories(categories => [ inputValue, ...categories]);\r\n            setInputValue('');\r\n        };\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input\r\n                type='text'\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n\r\n    );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n","\r\n\r\nexport const getGifs = async( category ) => {\r\n    const apiKey = \"tsnbn3qAimgIOewixSwW30p1z76i1ukw\";\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category)}&limit=10&api_key=${apiKey}`\r\n    \r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            'id': img.id,\r\n            'title': img.title,\r\n            'url': img.images?.downsized_medium.url\r\n        };\r\n    });\r\n\r\n    return gifs;\r\n\r\n};","import React from 'react';\r\n\r\nexport const GifGridItem= ( {id, title, url} ) => {\r\n\r\n    return (\r\n        <div className='card'>\r\n            <h3>{title}</h3>\r\n            <img src={url} alt={title}/>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( {category} ) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n\r\n        <>\r\n            <h3> { category } </h3>\r\n\r\n            { loading && <p>Cargando...</p>}\r\n            \r\n            <div className=\"card-grid animate__animated animate__fadeIn\">\r\n                {\r\n                    images.map( img => <GifGridItem key={img.id} {...img}/> )\r\n                };\r\n            </div>\r\n        </>\r\n    );\r\n\r\n};","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    \r\n    useEffect( () => {\r\n        getGifs( category )\r\n            .then( imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            });\r\n\r\n    }, [ category ]);\r\n\r\n    return state;\r\n\r\n};\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Adventure']);\r\n\r\n    return(\r\n        <>\r\n            <h2>Gifs</h2>\r\n\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr></hr>\r\n           \r\n\r\n            <ul>\r\n\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid key={ category } category={ category }/>\r\n                    ))\r\n                }\r\n\r\n            </ul>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}